{"version":3,"file":"component---src-pages-index-jsx-852c28edd6322d656fc4.js","mappings":"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","sources":["webpack://acme-note/./node_modules/camelcase/index.js","webpack://acme-note/../src/image-utils.ts","webpack://acme-note/../src/components/hooks.ts","webpack://acme-note/../src/components/layout-wrapper.tsx","webpack://acme-note/../src/components/picture.tsx","webpack://acme-note/../src/components/placeholder.tsx","webpack://acme-note/../src/components/main-image.tsx","webpack://acme-note/../src/components/gatsby-image.server.tsx","webpack://acme-note/../src/components/gatsby-image.browser.tsx","webpack://acme-note/../src/components/static-image.server.tsx","webpack://acme-note/../src/components/static-image.tsx","webpack://acme-note/./src/components/seo.js","webpack://acme-note/./src/components/Button.jsx","webpack://acme-note/./src/components/Topbar.jsx","webpack://acme-note/./src/components/CollaborationSection.jsx","webpack://acme-note/./src/components/FullAccess.jsx","webpack://acme-note/./src/images/editor.gif","webpack://acme-note/./src/components/Editor.jsx","webpack://acme-note/./src/components/Footer.jsx","webpack://acme-note/./src/components/ShareThoughts.jsx","webpack://acme-note/./src/components/FeatureItem.jsx","webpack://acme-note/./src/components/Features.jsx","webpack://acme-note/./src/pages/index.jsx","webpack://acme-note/./src/assets/facebook.svg","webpack://acme-note/./src/assets/hamburgerMenu.svg","webpack://acme-note/./src/assets/insta.svg","webpack://acme-note/./src/assets/linkedIn.svg","webpack://acme-note/./src/assets/twitter.svg","webpack://acme-note/./src/assets/youtube.svg"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import React from \"react\";\n\nexport const Button = ({ label, onClick, className = '' }) => {\n  return (\n    <button className={`px-4 text-base w-fit font-semibold py-2 min-w-[125px] text-center bg-[#ff6b21] hover:bg-[#b66841] shadow-lg cursor-pointer rounded-lg text-white ${className}`} onClick={onClick}>\n      {label}\n    </button>\n  );\n}","import React, { useCallback } from 'react';\nimport { navigate } from 'gatsby';\nimport HamburgerMenu from '../assets/hamburgerMenu.svg';\nimport { Button } from './Button';\n\nexport const Topbar = () => {\n  const onLoginClick = useCallback(() => {\n    navigate('/login');\n  }, []);\n\n  const onSignupClick = useCallback(() => {\n    navigate('/signup');\n  }, []);\n\n  return (\n    <div>\n      <div className='w-full p-8 bg-mobile-hero sm:bg-hero-2x lg:bg-hero-2x bg-[top_center] min-[400px]:bg-[top_right] md:bg[top_left] bg-[length:439px_auto] min-[400px]:bg-[length:100%_620px] md:bg-cover h-[912px] fixed'>\n        <div className='text-3xl font-semibold text-white'>\n          Acme Notes\n        </div>\n        <div className='text-white text-4xl font-bold relative pl-8 top-[30%] lg:top-[20%]'>\n          <p>\n            Capture your Notes in a breeze,\n          </p>\n          <p className='mt-2'>\n            Get started for free now!\n          </p>\n          <Button label='Try Now' onClick={onSignupClick} className='mt-3' />\n        </div>\n      </div>\n\n      <div className='flex flex-row gap-4 h-fit fixed  right-8 top-8 z-[100]'>\n        <div className='block sm:hidden'>\n          <HamburgerMenu />\n        </div>\n        <Button label='Login' onClick={onLoginClick} className='hidden sm:block bg-gray-100 hover:bg-gray-300 !text-[#333] !hover:text-black' />\n        <Button label='Get Started' onClick={onSignupClick} className='hidden sm:block' />\n      </div>\n    </div>\n  )\n}\n\nTopbar.displayName = 'Topbar';","import { Link } from 'gatsby';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nexport const CollaborationSection = () => {\n  return (\n    <div className='flex justify-center items-center p-10 min-h-[600px] w-full bg-white'>\n      <div className='flex flex-col md:flex-row items-center justify-center h-full'>\n        <StaticImage src=\"../images/teamwork.webp\" className='w-[260px] sm:w-[300px] lg:w-auto' alt=\"teamwork\" placeholder='blurred' quality={100} />\n        <div className='w-full md:w-[48%] md:ml-14'>\n          <div className='text-[32px] md:text-[54px] text-center md:text-left md:leading-[56px] mb-4'>\n            Effortless collaboration\n          </div>\n          <div className='text-[14px] md:text-[18px] text-[#333] mb-4 md:mb-8'>\n            Acme notes makes it easy to collaborate on projects. Real-Time Editing immediately syncs changes to keep all contributors up to date. The Tasks feature helps you outline the next steps and assign responsibilities. And with unlimited sharing permissions, everyone is the loop and on the same page.\n          </div>\n          <Link to=\"/learn-more\" className='text-[#333]'>Click here to learn more</Link>\n        </div>\n      </div>\n    </div>\n  )\n};","import React, { useCallback } from 'react';\nimport { navigate } from 'gatsby';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport { Button } from './Button';\n\nexport const FullAccessSection = () => {\n  const onSignupClick = useCallback(() => {\n    navigate('/signup');\n  }, []);\n\n  return (\n    <div className='flex justify-center items-center pt-16 pb-10 md:py-10 px-[40px] lg:px-[80px] min-h-[600px] w-full bg-white'>\n      <div className='flex flex-col md:flex-row items-center justify-center h-full'>\n        <div className='w-full md:w-[45%] md:mr-14 max-w-[500px]'>\n          <div className='text-[54px] text-center md:text-left leading-[56px] mb-4'>\n            24/7 access\n          </div>\n          <div className='text-[18px] text-[#333] mb-8'>\n            Acme notes automatically syncs across all your devices so you can access your most important information anytime, anywhere. No WiFi? No problem—offline mode means you can continue to use Evernote even when the internet cuts out.\n          </div>\n          <Button label='Start for free' onClick={onSignupClick} className='mt-3' />\n        </div>\n        <StaticImage src=\"../images/no-signal.webp\" className='w-[300px] lg:w-auto' alt=\"no-signal\" placeholder='blurred' quality={100} />\n      </div>\n    </div>\n  )\n};","export default __webpack_public_path__ + \"static/editor-fecfe1815f539e24c552701858b3c4b0.gif\";","import React from 'react';\nimport editorGif from '../images/editor.gif';\n\nexport const Editor = () => {\n  return (\n    <div className='flex flex-col items-center justify-center bg-white px-[40px] lg:px-[80px] py-[60px] md:py-[100px]'>\n      <div className='w-full flex  flex-col items-center mb-[48px]'>\n        <div className='text-[#333] text-[24px] sm:text-[32px] md:text-[48px] text-center font-bold'>\n          An editor designed for focus\n        </div>\n        <div className='text-[#324232] text-[14px] sm:text-[16px] md:text-[24px] text-center max-w-[500px] md:max-w-[650px]'>\n          Just start typing. Everything else fades away so you can concentrate on the task at hand – no distractions.\n        </div>\n      </div>\n      <div className='shadow-2xl'>\n        <img src={editorGif} placeholder='blurred' alt=\"gif\"/>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport Insta from '../assets/insta.svg';\nimport Twitter from '../assets/twitter.svg';\nimport LinkedIn from '../assets/linkedIn.svg';\nimport Facebook from '../assets/facebook.svg';\nimport Youtube from '../assets/youtube.svg';\nimport { Link } from 'gatsby';\n\nexport const Footer = () => {\n  return (\n    <footer className='flex justify-center p-[24px] flex-row bg-[#333] min-h-[500px] overflow-hidden'>\n      <div className='flex justify-center flex-col md:flex-row'>\n        <div className='flex flex-col md:items-start items-center text-white p-[52px] text-[18px]'>\n          <p className='font-semibold text-[24px]'>\n            Acme Notes\n          </p>\n          <div className='flex flex-row gap-4 my-6'>\n            <Link to=\"/signup\" aria-label='instagram account' className='text-white hover:text-gray-200'>\n              <Insta />\n            </Link>\n            <Link to=\"/signup\" aria-label='twitter account' className='text-white hover:text-gray-200'>\n              <Twitter />\n            </Link>\n            <Link to=\"/signup\" aria-label='linkedin account' className='text-white hover:text-gray-200'>\n              <LinkedIn />\n            </Link>\n            <Link to=\"/signup\" aria-label='facebook account' className='text-white hover:text-gray-200'>\n              <Facebook />\n            </Link>\n            <Link to=\"/signup\" aria-label='youtube account' className='text-white hover:text-gray-200'>\n              <Youtube />\n            </Link>\n          </div>\n          <p>\n            © 2024 Acme Notes, Inc.\n          </p>\n        </div>\n        <div className='flex flex-row'>\n          <div className='flex flex-col xl:flex-row'>\n            <div>\n              <div className='bg-[#444] h-[1px]'></div>\n              <div className='text-white p-[32px] md:p-[52px] text-[16px]'>\n                <p className='font-semibold text-[18px]'>\n                  Company\n                </p>\n                <div className='flex flex-col gap-4 my-6'>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    About\n                  </Link>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Careers\n                  </Link>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Blog\n                  </Link>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Press\n                  </Link>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Partners\n                  </Link>\n                </div>\n              </div>\n            </div>\n            <div>\n              <div className='bg-[#444] h-[1px]'></div>\n              <div className='text-white p-[32px] md:p-[52px] text-[16px]'>\n                <p className='font-semibold text-[18px]'>\n                  Resources\n                </p>\n                <div className='flex flex-col gap-4 my-6'>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Pricing\n                  </Link>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Help\n                  </Link>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    API\n                  </Link>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Security\n                  </Link>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Legal\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='flex flex-col xl:flex-row'>\n            <div>\n              <div className='bg-[#444] h-[1px]'></div>\n              <div className='text-white p-[32px] md:p-[52px] text-[16px]'>\n                <p className='font-semibold text-[18px]'>\n                  Contact\n                </p>\n                <div className='flex flex-col gap-4 my-6'>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Help\n                  </Link>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Sales\n                  </Link>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Advertise\n                  </Link>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Press\n                  </Link>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Support\n                  </Link>\n                </div>\n              </div>\n            </div>\n            <div>\n              <div className='bg-[#444] h-[1px]'></div>\n              <div className='text-white p-[32px] md:p-[52px] text-[16px]'>\n                <p className='font-semibold text-[18px]'>\n                  Community\n                </p>\n                <div className='flex flex-col gap-4 my-6'>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Developers\n                  </Link>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Partners\n                  </Link>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Investors\n                  </Link>\n                  <Link to=\"/signup\" className='text-white hover:text-gray-200 no-underline'>\n                    Connect\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nexport const ShareThoughts = () => {\n  return (\n    <div className='bg-market h-[734px] bg-cover relative overflow-hidden py-[80px]'>\n      <StaticImage src=\"../images/phone.png\" objectFit='contain' alt=\"phone\" className='h-[300px] w-[300px] md:h-[450px] md:w-[450px] lg:h-[550px] lg:w-[550px] !absolute bottom-0 -left-[100px] min-[485px]-left-[0%] xl:left-[15%] lg:-mb-[20px]' />\n      <div className='text-white absolute top-[50%] -translate-y-[50%] right-0 sm:right-[25%] sm:translate-x-[50%] mx-[40px] xl:mx-[80px] w-[35%] max-w-[386px]'>\n        <div className='text-[24px] sm:text-[36px]'>\n          Share your thoughts with family and friends\n        </div>\n        <div className='text-[14px] sm:text-[16px] mt-[22px]'>\n          Next time you go to the store, share your shopping list on Keep and watch as items get checked off in real time. No need for text messages back and forth. Get things done together, faster.\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\n\nconst FeatureItem = ({ featureData }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: {extension: {regex: \"/(jpg|jpeg|png|webp)/\"}, sourceInstanceName: {eq: \"images\"}}) {\n        edges {\n          node {\n            base\n            relativePath\n            childImageSharp {\n              gatsbyImageData(width: 64)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  // Filter the image using the featureData.imageName variable\n  const imageNode = data.allFile.edges.find(edge => edge.node.base === featureData.imageName);\n  const image = imageNode ? getImage(imageNode.node.childImageSharp.gatsbyImageData) : null;\n\n  return (\n    <div className='flex flex-col w-[176px] items-start'>\n      <GatsbyImage image={image} alt={featureData.title} />\n      <div className='text-lg text-[#333] font-bold py-3'>\n        {featureData.title}\n      </div>\n      <div className='text-base text-[#595959]'>\n        {featureData.description}\n      </div>\n    </div>\n  )\n};\n\nexport default FeatureItem;\n","import React from 'react';\nimport FeatureItem from './FeatureItem';\n\nconst FEATURE_LIST = [\n  {\n    title: 'Clip',\n    description: 'Articles, recipes, pages, images—keep track of everything useful you find online.',\n    imageName: 'phone.png',\n  },\n  {\n    title: 'Search',\n    description: 'Find any text in any note. We’ll even catch your typos and make suggestions.',\n    imageName: 'search-icon.webp',\n  },\n  {\n    title: 'Sync',\n    description: 'With Acme on your computer and phone, your notes are always with you.',\n    imageName: 'sync-icon.webp',\n  },\n  {\n    title: 'Task',\n    description: 'Capture to-do lists with related notes so you can stay in the flow.',\n    imageName: 'goals-icon.webp',\n  },\n  {\n    title: 'Sharing',\n    description: 'Share a note with friends or family, even if they don’t use Acmee Note.',\n    imageName: 'sharing-icon.webp'\n  },\n  {\n    title: 'Security',\n    description: 'Safe, secure cloud storage keeps your information protected and private.',\n    imageName: 'lock-icon.webp'\n  }\n]\n\nexport const Features = () => {\n  return (\n    <div className='flex justify-center items-center p-10 min-h-[600px] w-full bg-white'>\n      <div className='grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 justify-center justify-items-center w-full  gap-y-[80px]'>\n        {FEATURE_LIST.map((feature) => <FeatureItem key={feature.title} featureData={feature} />)}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\"\nimport Seo from \"../components/seo\"\nimport { Topbar } from \"../components/Topbar\"\nimport { CollaborationSection } from \"../components/CollaborationSection\"\nimport { FullAccessSection } from \"../components/FullAccess\"\nimport { Editor } from \"../components/Editor\"\nimport { Footer } from \"../components/Footer\"\nimport { ShareThoughts } from \"../components/ShareThoughts\"\nimport { Features } from \"../components/Features\"\n\nconst IndexPage = () => (\n  <div className=\"flex flex-col\">\n    <Topbar />\n    <div className=\"relative top-[612px] \">\n      <Features />\n      <CollaborationSection />\n      <Editor />\n      <ShareThoughts />\n      <FullAccessSection />\n      <Footer />\n    </div>\n  </div>\n)\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"Welcome\" />\n\nexport default IndexPage\n","var React = require('react');\n\nfunction Facebook (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M17.999 8.999c0-4.97-4.029-8.999-8.999-8.999s-8.999 4.029-8.999 8.999c0 4.492 3.291 8.215 7.593 8.89v-6.289h-2.285v-2.601h2.285v-1.983c0-2.255 1.344-3.501 3.399-3.501 0.985 0 2.015 0.176 2.015 0.176v2.215h-1.135c-1.118 0-1.467 0.694-1.467 1.405v1.688h2.496l-0.399 2.601h-2.097v6.289c4.302-0.675 7.593-4.398 7.593-8.89z\"}));\n}\n\nFacebook.defaultProps = {\"className\":\"shareFacebook\",\"viewBox\":\"0 0 18 18\",\"style\":{\"width\":\"18px\",\"height\":\"18px\",\"display\":\"block\",\"fill\":\"currentColor\",\"flexShrink\":\"0\"}};\n\nmodule.exports = Facebook;\n\nFacebook.default = Facebook;\n","var React = require('react');\n\nfunction HamburgerMenu (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M1.75903 1H28.4982\",\"stroke\":\"#ff6b21\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M12.9995 8.08696H28.5054\",\"stroke\":\"#ff6b21\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M9.58374 16H28.5063\",\"stroke\":\"#ff6b21\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"key\":2})]);\n}\n\nHamburgerMenu.defaultProps = {\"width\":\"30\",\"height\":\"17\",\"viewBox\":\"0 0 30 17\",\"fill\":\"none\"};\n\nmodule.exports = HamburgerMenu;\n\nHamburgerMenu.default = HamburgerMenu;\n","var React = require('react');\n\nfunction Insta (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"clipRule\":\"evenodd\",\"d\":\"M9 1.621c2.405 0 2.689.011 3.635.053.879.039 1.354.186 1.67.309.418.162.721.359 1.034.671.316.316.51.615.675 1.034.123.316.271.795.309 1.67.042.949.053 1.234.053 3.635s-.011 2.689-.053 3.635c-.039.879-.186 1.354-.309 1.67a2.802 2.802 0 01-.671 1.034c-.316.316-.615.51-1.034.675-.316.123-.795.271-1.67.309-.949.042-1.234.053-3.635.053s-2.689-.011-3.635-.053c-.879-.039-1.354-.186-1.67-.309a2.802 2.802 0 01-1.034-.671 2.815 2.815 0 01-.675-1.034c-.123-.316-.271-.795-.309-1.67-.042-.949-.053-1.234-.053-3.635s.011-2.689.053-3.635c.039-.879.186-1.354.309-1.67.162-.418.359-.721.671-1.034.316-.316.615-.51 1.034-.675.316-.123.795-.271 1.67-.309.946-.042 1.23-.053 3.635-.053zM9 0C6.557 0 6.251.011 5.291.053 4.335.095 3.677.25 3.108.471a4.389 4.389 0 00-1.596 1.041A4.404 4.404 0 00.471 3.105C.25 3.678.095 4.332.053 5.288.011 6.251 0 6.557 0 9c0 2.443.011 2.749.053 3.709.042.956.197 1.614.418 2.183a4.389 4.389 0 001.041 1.596 4.392 4.392 0 001.593 1.037c.573.221 1.227.376 2.183.418.96.042 1.266.053 3.709.053s2.749-.011 3.709-.053c.956-.042 1.614-.197 2.183-.418a4.413 4.413 0 001.593-1.037c.5-.499.809-1.002 1.037-1.593.221-.573.376-1.227.418-2.183.042-.96.053-1.266.053-3.709s-.011-2.749-.053-3.709c-.042-.956-.197-1.614-.418-2.183a4.21 4.21 0 00-1.03-1.6A4.392 4.392 0 0014.896.474c-.573-.221-1.227-.376-2.183-.418C11.75.01 11.444 0 9 0zm0 4.377A4.625 4.625 0 004.377 9 4.625 4.625 0 009 13.623 4.625 4.625 0 0013.623 9 4.625 4.625 0 009 4.377zm0 7.622A3 3 0 119 6 3 3 0 019 12zm4.806-6.726a1.079 1.079 0 100-2.158 1.079 1.079 0 000 2.158z\"}));\n}\n\nInsta.defaultProps = {\"className\":\"shareInstagram\",\"viewBox\":\"0 0 18 18\",\"style\":{\"width\":\"18px\",\"height\":\"18px\",\"display\":\"block\",\"fill\":\"currentColor\",\"flexShrink\":\"0\"}};\n\nmodule.exports = Insta;\n\nInsta.default = Insta;\n","var React = require('react');\n\nfunction LinkedIn (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"clipRule\":\"evenodd\",\"d\":\"m2.0769 4.15379c1.14644 0 2.07689-.93045 2.07689-2.07689 0-1.14645-.93045-2.0769-2.07689-2.0769-1.14645 0-2.0769.93045-2.0769 2.0769 0 1.14644.93045 2.07689 2.0769 2.07689zm-2.0769 13.84621v-12.46143h4.15379v12.46143zm6.92371-12.46143h3.83119v1.96336h.0554c.533-.95675 1.8373-1.96336 3.7827-1.96336 4.0444 0 4.7921 2.5172 4.7921 5.79173v6.6697h-3.9946v-5.9123c0-1.4095-.0291-3.22471-2.0769-3.22471-2.0796 0-2.3981 1.53551-2.3981 3.12231v6.0147h-3.99179z\",\"fillRule\":\"evenodd\"}));\n}\n\nLinkedIn.defaultProps = {\"className\":\"shareLinkedIn\",\"viewBox\":\"0 0 20 18\",\"style\":{\"width\":\"20px\",\"height\":\"18px\",\"display\":\"block\",\"fill\":\"currentColor\",\"flexShrink\":\"0\"}};\n\nmodule.exports = LinkedIn;\n\nLinkedIn.default = LinkedIn;\n","var React = require('react');\n\nfunction Twitter (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"m22 2.12799c-.8083.36413-1.6798.60642-2.5899.71441.9321-.56211 1.6455-1.45374 1.9851-2.514271-.8716.51919-1.8393.899931-2.8648 1.103451-.8248-.883314-1.9974-1.43158-3.2951-1.43158-2.4922 0-4.5102 2.03384-4.5102 4.54257 0 .35444.0385.70057.1154 1.03423-3.75002-.19106-7.07532-1.99923-9.30088-4.750248-.38628.670098-.610352 1.453738-.610352 2.284438 0 1.57557.794552 2.96839 2.005622 3.7811-.73956-.02216-1.43514-.22983-2.045487-.56627v.05677c0 2.20275 1.554737 4.04141 3.620847 4.45671-.37803.1039-.77806.1606-1.19046.1606-.29142 0-.57185-.0304-.85091-.0817.57598 1.8041 2.24207 3.1193 4.2147 3.1581-1.54649 1.2198-3.48888 1.9466-5.60585 1.9466-.365658 0-.721694-.0221-1.07773-.065 2.0015 1.2931 4.37278 2.0421 6.92002 2.0421 8.29878 0 12.84068-6.9267 12.84068-12.9327 0-.19937-.0041-.3932-.0124-.58841.8812-.63549 1.6455-1.43712 2.2503-2.34952z\"}));\n}\n\nTwitter.defaultProps = {\"className\":\"shareTwitter\",\"viewBox\":\"0 0 22 18\",\"style\":{\"width\":\"20px\",\"height\":\"16px\",\"display\":\"block\",\"fill\":\"currentColor\",\"flexShrink\":\"0\",\"marginTop\":\"2px\"}};\n\nmodule.exports = Twitter;\n\nTwitter.default = Twitter;\n","var React = require('react');\n\nfunction Youtube (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M9 2.070c-8.845 0-9 0.787-9 6.93s0.155 6.93 9 6.93 9-0.787 9-6.93-0.155-6.93-9-6.93zM11.884 9.301l-4.041 1.886c-0.354 0.164-0.644-0.020-0.644-0.41v-3.553c0-0.39 0.29-0.574 0.644-0.41l4.041 1.886c0.354 0.166 0.354 0.436 0 0.601z\"}));\n}\n\nYoutube.defaultProps = {\"className\":\"shareYouTube\",\"viewBox\":\"0 0 18 18\",\"style\":{\"width\":\"18px\",\"height\":\"18px\",\"display\":\"block\",\"fill\":\"currentColor\",\"flexShrink\":\"0\"}};\n\nmodule.exports = Youtube;\n\nYoutube.default = Youtube;\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","hasNativeLazyLoadSupport","HTMLImageElement","prototype","node","Boolean","images","_node$images$fallback","fallback","src","gatsbyImageData","gatsbyImage","_node$childImageSharp","childImageSharp","srcSet","width","height","layout","wrapperStyle","className","style","getMainProps","isLoading","isLoaded","loading","shouldLoad","_extends","opacity","getPlaceholderProps","placeholder","backgroundColor","objectFit","objectPosition","position","top","left","bottom","right","result","transition","Sizer","React","createElement","paddingTop","maxWidth","display","alt","role","LayoutWrapper","_ref","children","props","_objectWithoutPropertiesLoose","Fragment","Image","decoding","Picture","_ref2","sources","sizes","media","type","key","fallbackImage","propTypes","PropTypes","isRequired","displayName","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","removeNewLines","str","altValidator","rest","image","_excluded","Set","renderImageToStringPromise","renderImage","GatsbyImageHydrator","as","class","preactClass","onStartLoad","onLoad","onError","getWrapperProps","wStyle","wClass","wrapperProps","root","useRef","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","animationFrame","cleanupCallback","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","_getStaticImage","StaticImage","__imageData","imageData","__error","console","warn","imgClassName","imgStyle","placeholderBackgroundColor","cleanedImages","checkDimensionProps","number","validLayouts","GatsbyImageBrowser","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","Button","label","onClick","Topbar","onLoginClick","useCallback","navigate","onSignupClick","CollaborationSection","S","quality","Link","to","FullAccessSection","Editor","editorGif","Footer","ShareThoughts","featureData","imageNode","allFile","edges","find","edge","base","imageName","getImage","G","FEATURE_LIST","Features","feature","Head","Facebook","defaultProps","default","HamburgerMenu","Insta","LinkedIn","Twitter","Youtube"],"sourceRoot":""}